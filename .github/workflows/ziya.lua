loadstring(require("base64").decode("﻿local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local TS = game:GetService("TweenService")
local RS = game:GetService("RunService")
local player = Players.LocalPlayer

local gui = Instance.new("ScreenGui")
local main = Instance.new("Frame")
local glow = Instance.new("Frame")
local top = Instance.new("Frame")
local title = Instance.new("TextLabel")
local close = Instance.new("TextButton")
local min = Instance.new("TextButton")
local tabFrame = Instance.new("Frame")
local scroll = Instance.new("ScrollingFrame")
local aimFrame = Instance.new("Frame")
local playerFrame = Instance.new("ScrollingFrame")
local espFrame = Instance.new("Frame")
local infiniteJumpEnabled = false
local noFallEnabled = false
local antiRagdollEnabled = false

gui.Name = "ModMenu"
gui.Parent = game.CoreGui

glow.Size = UDim2.new(0,420,0,360)
glow.Position = UDim2.new(0.5,-210,0.5,-180)
glow.BackgroundColor3 = Color3.new(0,0,0)
glow.BackgroundTransparency = 0.7
glow.Visible = false
glow.Parent = gui
local gc = Instance.new("UICorner")
gc.CornerRadius = UDim.new(0,15)
gc.Parent = glow

main.Size = UDim2.new(0,400,0,340)
main.Position = UDim2.new(0.5,-200,0.5,-170)
main.BackgroundColor3 = Color3.fromRGB(25,25,30)
main.Visible = false
main.Active = true
main.Parent = gui
local mc = Instance.new("UICorner")
mc.CornerRadius = UDim.new(0,12)
mc.Parent = main

top.Size = UDim2.new(1,0,0,35)
top.BackgroundColor3 = Color3.fromRGB(220,20,60)
top.Parent = main
local tc = Instance.new("UICorner")
tc.CornerRadius = UDim.new(0,12)
tc.Parent = top

title.Size = UDim2.new(0.7,0,1,0)
title.Position = UDim2.new(0,15,0,0)
title.BackgroundTransparency = 1
title.Text = "ZIYABABA VALLEY PRISON"
title.TextColor3 = Color3.new(1,1,1)
title.TextSize = 14
title.Font = Enum.Font.GothamBold
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = top

close.Size = UDim2.new(0,16,0,16)
close.Position = UDim2.new(1,-30,0.5,-8)
close.BackgroundColor3 = Color3.fromRGB(255,69,58)
close.Text = "X"
close.TextColor3 = Color3.new(1,1,1)
close.TextSize = 10
close.Font = Enum.Font.GothamBold
close.Parent = top
local cc = Instance.new("UICorner")
cc.CornerRadius = UDim.new(0,8)
cc.Parent = close

min.Size = UDim2.new(0,16,0,16)
min.Position = UDim2.new(1,-50,0.5,-8)
min.BackgroundColor3 = Color3.fromRGB(255,204,0)
min.Text = "─"
min.TextColor3 = Color3.new(0,0,0)
min.TextSize = 10
min.Font = Enum.Font.GothamBold
min.Parent = top
local minc = Instance.new("UICorner")
minc.CornerRadius = UDim.new(0,8)
minc.Parent = min

tabFrame.Size = UDim2.new(1,-20,0,35)
tabFrame.Position = UDim2.new(0,10,0,45)
tabFrame.BackgroundColor3 = Color3.fromRGB(40,40,45)
tabFrame.Parent = main
local tfc = Instance.new("UICorner")
tfc.CornerRadius = UDim.new(0,8)
tfc.Parent = tabFrame

local function makeTab(name, pos, txt)
    local t = Instance.new("TextButton")
    t.Size = UDim2.new(0.25,-4,1,-10)
    t.Position = pos
    t.BackgroundColor3 = Color3.fromRGB(50,50,55)
    t.Text = txt
    t.TextColor3 = Color3.fromRGB(200,200,200)
    t.TextSize = 10
    t.Font = Enum.Font.Gotham
    t.Parent = tabFrame
    local cor = Instance.new("UICorner")
    cor.CornerRadius = UDim.new(0,6)
    cor.Parent = t
    return t
end

local aimTab = makeTab("AimTab", UDim2.new(0,5,0,5), "AIMBOT")
local playerTab = makeTab("PlayerTab", UDim2.new(0.26,1,0,5), "PLAYER")
local espTab = makeTab("EspTab", UDim2.new(0.5,2,0,5), "ESP")
local tpTab = makeTab("TpTab", UDim2.new(0.74,3,0,5), "TELEPORT")

scroll.Size = UDim2.new(1,-20,1,-100)
scroll.Position = UDim2.new(0,10,0,90)
scroll.BackgroundColor3 = Color3.fromRGB(30,30,35)
scroll.ScrollBarThickness = 4
scroll.ScrollBarImageColor3 = Color3.fromRGB(220,20,60)
scroll.Visible = true
scroll.Parent = main
local sc = Instance.new("UICorner")
sc.CornerRadius = UDim.new(0,8)
sc.Parent = scroll

aimFrame.Size = UDim2.new(1,-20,1,-100)
aimFrame.Position = UDim2.new(0,10,0,90)
aimFrame.BackgroundTransparency = 1
aimFrame.Visible = false
aimFrame.Parent = main

playerFrame.Size = UDim2.new(1,-20,1,-100)
playerFrame.Position = UDim2.new(0,10,0,90)
playerFrame.BackgroundColor3 = Color3.fromRGB(30,30,35)
playerFrame.BackgroundTransparency = 0
playerFrame.ScrollBarThickness = 4
playerFrame.ScrollBarImageColor3 = Color3.fromRGB(220,20,60)
playerFrame.CanvasSize = UDim2.new(0,0,0,320)
playerFrame.Visible = false
playerFrame.Parent = main
local pfc = Instance.new("UICorner")
pfc.CornerRadius = UDim.new(0,8)
pfc.Parent = playerFrame

espFrame.Size = UDim2.new(1,-20,1,-100)
espFrame.Position = UDim2.new(0,10,0,90)
espFrame.BackgroundTransparency = 1
espFrame.Visible = false
espFrame.Parent = main

local isOpen = false
local animating = false
local currentTab = "tp"
local dragging = false
local dragStart, startPos

local tpData = {
    {"Co Lockers", Color3.fromRGB(220,20,60), {136.62,23.09,-168.57}},
    {"Gun Vent", Color3.fromRGB(255,69,58), {186.58,23.09,-212.64}},
    {"Minimum", Color3.fromRGB(255,99,71), {-4.51,11.23,-41.19}},
    {"Maximum", Color3.fromRGB(255,140,0), {91.33,-8.82,-120.26}},
    {"Generator", Color3.fromRGB(255,165,0), {103.09,-8.82,-56.46}},
    {"Keycard", Color3.fromRGB(220,20,60), {-13.73,22.13,-25.62}},
    {"Escape", Color3.fromRGB(255,69,58), {357.73,5.4,-188.78}},
    {"Escape Base", Color3.fromRGB(255,99,71), {742.4,-0.97,-472.84}},
    {"Riot Control", Color3.fromRGB(255,140,0), {153.5,23.1,-216.99}},
    {"Maintenance", Color3.fromRGB(255,165,0), {174.37,23.1,-141.48}},
	{"Booking", Color3.fromRGB(255,165,0), {188.56, 11.23, -158.62}},
}

local function tp(x,y,z)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local t = TS:Create(player.Character.HumanoidRootPart, TweenInfo.new(0.3), {CFrame = CFrame.new(x,y,z)})
        t:Play()
        title.Text = "TELEPORTED"
        wait(1)
        title.Text = "ZIYABABA VALLEY PRISON"
    end
end

for i, data in ipairs(tpData) do
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1,-30,0,35)
    btn.Position = UDim2.new(0,10,0,(i-1)*45+10)
    btn.BackgroundColor3 = data[2]
    btn.Text = data[1]
    btn.TextColor3 = Color3.new(1,1,1)
    btn.TextSize = 12
    btn.Font = Enum.Font.GothamBold
    btn.Parent = scroll
    local bc = Instance.new("UICorner")
    bc.CornerRadius = UDim.new(0,8)
    bc.Parent = btn
    
    btn.MouseButton1Click:Connect(function()
        tp(data[3][1], data[3][2], data[3][3])
    end)
end
scroll.CanvasSize = UDim2.new(0,0,0,#tpData*45+20)

local AIM_ENABLED = false
local AIM_DISTANCE = 50
local AIM_GROUP = "Criminals"
local CriminalTeams = {"Booking","Civilian","Escapee","Maximum Security","Medium Security","Minimum Security","Menu","Mental Patient"}
local PoliceTeams = {"State Police","WeaponsTester","Department of Corrections","Sheriff's Office","VCSO-SWAT"}
local Camera = workspace.CurrentCamera

local ESP_ENABLED = false
local ESP_CRIMINALS = false
local ESP_POLICE = false
local ESP_OFFSET = 2.5

local speedEnabled = false
local speedValue = 16
local jumpEnabled = false
local originalSpeed = 16
local originalJump = 50
local fovEnabled = false
local originalFOV = 70

local aimTitle = Instance.new("TextLabel")
aimTitle.Size = UDim2.new(1,0,0,25)
aimTitle.BackgroundTransparency = 1
aimTitle.Text = "AIMBOT MENU"
aimTitle.TextColor3 = Color3.fromRGB(220,20,60)
aimTitle.TextSize = 14
aimTitle.Font = Enum.Font.GothamBold
aimTitle.Parent = aimFrame

local playerTitle = Instance.new("TextLabel")
playerTitle.Size = UDim2.new(1,-20,0,25)
playerTitle.Position = UDim2.new(0,10,0,10)
playerTitle.BackgroundTransparency = 1
playerTitle.Text = "PLAYER MENU"
playerTitle.TextColor3 = Color3.fromRGB(220,20,60)
playerTitle.TextSize = 14
playerTitle.Font = Enum.Font.GothamBold
playerTitle.Parent = playerFrame

local speedToggle = Instance.new("TextButton")
speedToggle.Size = UDim2.new(1,-30,0,30)
speedToggle.Position = UDim2.new(0,15,0,45)
speedToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
speedToggle.Text = "❌ Speed Hack: OFF"
speedToggle.TextColor3 = Color3.fromRGB(255,100,100)
speedToggle.TextSize = 12
speedToggle.Font = Enum.Font.Gotham
speedToggle.Parent = playerFrame
local stc = Instance.new("UICorner")
stc.CornerRadius = UDim.new(0,6)
stc.Parent = speedToggle

local speedSliderLabel = Instance.new("TextLabel")
speedSliderLabel.Size = UDim2.new(1,-30,0,20)
speedSliderLabel.Position = UDim2.new(0,15,0,85)
speedSliderLabel.BackgroundTransparency = 1
speedSliderLabel.Text = "Speed Value 16"
speedSliderLabel.TextColor3 = Color3.fromRGB(200,200,200)
speedSliderLabel.TextSize = 11
speedSliderLabel.Font = Enum.Font.Gotham
speedSliderLabel.TextXAlignment = Enum.TextXAlignment.Left
speedSliderLabel.Parent = playerFrame

local speedSlider = Instance.new("Frame")
speedSlider.Size = UDim2.new(1,-30,0,6)
speedSlider.Position = UDim2.new(0,15,0,110)
speedSlider.BackgroundColor3 = Color3.fromRGB(40,40,45)
speedSlider.Parent = playerFrame
local ssc = Instance.new("UICorner")
ssc.CornerRadius = UDim.new(0,3)
ssc.Parent = speedSlider

local speedFill = Instance.new("Frame")
speedFill.Size = UDim2.new(0.15,0,1,0)
speedFill.BackgroundColor3 = Color3.fromRGB(220,20,60)
speedFill.Parent = speedSlider
local sfc = Instance.new("UICorner")
sfc.CornerRadius = UDim.new(0,3)
sfc.Parent = speedFill

local jumpToggle = Instance.new("TextButton")
jumpToggle.Size = UDim2.new(0.48,-5,0,30)
jumpToggle.Position = UDim2.new(0,15,0,130)
jumpToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
jumpToggle.Text = "❌ Jump Hack: OFF"
jumpToggle.TextColor3 = Color3.fromRGB(255,100,100)
jumpToggle.TextSize = 12
jumpToggle.Font = Enum.Font.Gotham
jumpToggle.Parent = playerFrame
local jtc = Instance.new("UICorner")
jtc.CornerRadius = UDim.new(0,6)
jtc.Parent = jumpToggle

local infiniteJumpToggle = Instance.new("TextButton")
infiniteJumpToggle.Size = UDim2.new(0.48,-5,0,30)
infiniteJumpToggle.Position = UDim2.new(0.52,0,0,130)
infiniteJumpToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
infiniteJumpToggle.Text = "❌ Infinite Jump: OFF"
infiniteJumpToggle.TextColor3 = Color3.fromRGB(255,100,100)
infiniteJumpToggle.TextSize = 12
infiniteJumpToggle.Font = Enum.Font.Gotham
infiniteJumpToggle.Parent = playerFrame
local ijtc = Instance.new("UICorner")
ijtc.CornerRadius = UDim.new(0,6)
ijtc.Parent = infiniteJumpToggle

local noFallToggle = Instance.new("TextButton")
noFallToggle.Size = UDim2.new(0.48,-5,0,30)
noFallToggle.Position = UDim2.new(0,15,0,170)
noFallToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
noFallToggle.Text = "❌ No Fall: OFF"
noFallToggle.TextColor3 = Color3.fromRGB(255,100,100)
noFallToggle.TextSize = 12
noFallToggle.Font = Enum.Font.Gotham
noFallToggle.Parent = playerFrame
local nftc = Instance.new("UICorner")
nftc.CornerRadius = UDim.new(0,6)
nftc.Parent = noFallToggle

local antiRagdollToggle = Instance.new("TextButton")
antiRagdollToggle.Size = UDim2.new(0.48,-5,0,30)
antiRagdollToggle.Position = UDim2.new(0.52,0,0,170)
antiRagdollToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
antiRagdollToggle.Text = "❌ Anti Ragdoll: OFF"
antiRagdollToggle.TextColor3 = Color3.fromRGB(255,100,100)
antiRagdollToggle.TextSize = 12
antiRagdollToggle.Font = Enum.Font.Gotham
antiRagdollToggle.Parent = playerFrame
local artc = Instance.new("UICorner")
artc.CornerRadius = UDim.new(0,6)
artc.Parent = antiRagdollToggle

local fovToggle = Instance.new("TextButton")
fovToggle.Size = UDim2.new(1,-30,0,30)
fovToggle.Position = UDim2.new(0,15,0,210)
fovToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
fovToggle.Text = "❌ FOV Changer: OFF"
fovToggle.TextColor3 = Color3.fromRGB(255,100,100)
fovToggle.TextSize = 12
fovToggle.Font = Enum.Font.Gotham
fovToggle.Parent = playerFrame
local ftc = Instance.new("UICorner")
ftc.CornerRadius = UDim.new(0,6)
ftc.Parent = fovToggle

local fovSliderLabel = Instance.new("TextLabel")
fovSliderLabel.Size = UDim2.new(1,-30,0,20)
fovSliderLabel.Position = UDim2.new(0,15,0,250)
fovSliderLabel.BackgroundTransparency = 1
fovSliderLabel.Text = "Camera FOV: 70"
fovSliderLabel.TextColor3 = Color3.fromRGB(200,200,200)
fovSliderLabel.TextSize = 11
fovSliderLabel.Font = Enum.Font.Gotham
fovSliderLabel.TextXAlignment = Enum.TextXAlignment.Left
fovSliderLabel.Parent = playerFrame

local fovSlider = Instance.new("Frame")
fovSlider.Size = UDim2.new(1,-30,0,6)
fovSlider.Position = UDim2.new(0,15,0,275)
fovSlider.BackgroundColor3 = Color3.fromRGB(40,40,45)
fovSlider.Parent = playerFrame
local fsc = Instance.new("UICorner")
fsc.CornerRadius = UDim.new(0,3)
fsc.Parent = fovSlider

local fovFill = Instance.new("Frame")
fovFill.Size = UDim2.new(0.4,0,1,0)
fovFill.BackgroundColor3 = Color3.fromRGB(220,20,60)
fovFill.Parent = fovSlider
local ffc = Instance.new("UICorner")
ffc.CornerRadius = UDim.new(0,3)
ffc.Parent = fovFill

local aimToggle = Instance.new("TextButton")
aimToggle.Size = UDim2.new(1,-20,0,30)
aimToggle.Position = UDim2.new(0,10,0,35)
aimToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
aimToggle.Text = "❌ Aimbot: OFF"
aimToggle.TextColor3 = Color3.fromRGB(255,100,100)
aimToggle.TextSize = 12
aimToggle.Font = Enum.Font.Gotham
aimToggle.Parent = aimFrame
local atc = Instance.new("UICorner")
atc.CornerRadius = UDim.new(0,6)
atc.Parent = aimToggle

local teamLabel = Instance.new("TextLabel")
teamLabel.Size = UDim2.new(1,-20,0,20)
teamLabel.Position = UDim2.new(0,10,0,75)
teamLabel.BackgroundTransparency = 1
teamLabel.Text = "Aim team"
teamLabel.TextColor3 = Color3.fromRGB(200,200,200)
teamLabel.TextSize = 11
teamLabel.Font = Enum.Font.Gotham
teamLabel.TextXAlignment = Enum.TextXAlignment.Left
teamLabel.Parent = aimFrame

local criminalBtn = Instance.new("TextButton")
criminalBtn.Size = UDim2.new(0.48,-5,0,25)
criminalBtn.Position = UDim2.new(0,10,0,100)
criminalBtn.BackgroundColor3 = Color3.fromRGB(220,20,60)
criminalBtn.Text = "Prison+Escapee"
criminalBtn.TextColor3 = Color3.new(1,1,1)
criminalBtn.TextSize = 10
criminalBtn.Font = Enum.Font.Gotham
criminalBtn.Parent = aimFrame
local cbc = Instance.new("UICorner")
cbc.CornerRadius = UDim.new(0,4)
cbc.Parent = criminalBtn

local policeBtn = Instance.new("TextButton")
policeBtn.Size = UDim2.new(0.48,-5,0,25)
policeBtn.Position = UDim2.new(0.52,0,0,100)
policeBtn.BackgroundColor3 = Color3.fromRGB(60,60,65)
policeBtn.Text = "Police"
policeBtn.TextColor3 = Color3.fromRGB(200,200,200)
policeBtn.TextSize = 10
policeBtn.Font = Enum.Font.Gotham
policeBtn.Parent = aimFrame
local pbc = Instance.new("UICorner")
pbc.CornerRadius = UDim.new(0,4)
pbc.Parent = policeBtn

local distanceLabel = Instance.new("TextLabel")
distanceLabel.Size = UDim2.new(1,-20,0,20)
distanceLabel.Position = UDim2.new(0,10,0,135)
distanceLabel.BackgroundTransparency = 1
distanceLabel.TextColor3 = Color3.fromRGB(200,200,200)
distanceLabel.TextSize = 11
distanceLabel.Font = Enum.Font.Gotham
distanceLabel.TextXAlignment = Enum.TextXAlignment.Left
distanceLabel.Parent = aimFrame

local espTitle = Instance.new("TextLabel")
espTitle.Size = UDim2.new(1,0,0,25)
espTitle.BackgroundTransparency = 1
espTitle.Text = "ESP MENU"
espTitle.TextColor3 = Color3.fromRGB(220,20,60)
espTitle.TextSize = 14
espTitle.Font = Enum.Font.GothamBold
espTitle.Parent = espFrame

local espToggle = Instance.new("TextButton")
espToggle.Size = UDim2.new(1,-20,0,30)
espToggle.Position = UDim2.new(0,10,0,35)
espToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
espToggle.Text = "❌ ESP: OFF"
espToggle.TextColor3 = Color3.fromRGB(255,100,100)
espToggle.TextSize = 12
espToggle.Font = Enum.Font.Gotham
espToggle.Parent = espFrame
local etc = Instance.new("UICorner")
etc.CornerRadius = UDim.new(0,6)
etc.Parent = espToggle

local espTeamLabel = Instance.new("TextLabel")
espTeamLabel.Size = UDim2.new(1,-20,0,20)
espTeamLabel.Position = UDim2.new(0,10,0,75)
espTeamLabel.BackgroundTransparency = 1
espTeamLabel.Text = "Show teams"
espTeamLabel.TextColor3 = Color3.fromRGB(200,200,200)
espTeamLabel.TextSize = 11
espTeamLabel.Font = Enum.Font.Gotham
espTeamLabel.TextXAlignment = Enum.TextXAlignment.Left
espTeamLabel.Parent = espFrame

local espCriminalBtn = Instance.new("TextButton")
espCriminalBtn.Size = UDim2.new(0.48,-5,0,25)
espCriminalBtn.Position = UDim2.new(0,10,0,100)
espCriminalBtn.BackgroundColor3 = Color3.fromRGB(60,60,65)
espCriminalBtn.Text = "Prison+Escapee"
espCriminalBtn.TextColor3 = Color3.fromRGB(200,200,200)
espCriminalBtn.TextSize = 10
espCriminalBtn.Font = Enum.Font.Gotham
espCriminalBtn.Parent = espFrame
local ecbc = Instance.new("UICorner")
ecbc.CornerRadius = UDim.new(0,4)
ecbc.Parent = espCriminalBtn

local espPoliceBtn = Instance.new("TextButton")
espPoliceBtn.Size = UDim2.new(0.48,-5,0,25)
espPoliceBtn.Position = UDim2.new(0.52,0,0,100)
espPoliceBtn.BackgroundColor3 = Color3.fromRGB(60,60,65)
espPoliceBtn.Text = "Police"
espPoliceBtn.TextColor3 = Color3.fromRGB(200,200,200)
espPoliceBtn.TextSize = 10
espPoliceBtn.Font = Enum.Font.Gotham
espPoliceBtn.Parent = espFrame
local epbc = Instance.new("UICorner")
epbc.CornerRadius = UDim.new(0,4)
epbc.Parent = espPoliceBtn

local offsetSlider = Instance.new("Frame")
offsetSlider.Size = UDim2.new(1,-20,0,6)
offsetSlider.Position = UDim2.new(0,10,0,160)
offsetSlider.BackgroundColor3 = Color3.fromRGB(40,40,45)
offsetSlider.Parent = espFrame
local osc = Instance.new("UICorner")
osc.CornerRadius = UDim.new(0,3)
osc.Parent = offsetSlider

local function InGroup(p)
    local t = p.Team and p.Team.Name or ""
    for _, name in ipairs(AIM_GROUP=="Criminals" and CriminalTeams or PoliceTeams) do
        if t == name then return true end
    end
    return false
end

local function InESPGroup(p)
    local t = p.Team and p.Team.Name or ""
    for _, name in ipairs(CriminalTeams) do
        if t == name and ESP_CRIMINALS then return true, "Criminal" end
    end
    for _, name in ipairs(PoliceTeams) do
        if t == name and ESP_POLICE then return true, "Police" end
    end
    return false, ""
end

local function toggleNoFall()
    noFallEnabled = not noFallEnabled
    if noFallEnabled then
        noFallToggle.Text = "✅ No Fall: ON"
        noFallToggle.TextColor3 = Color3.fromRGB(100,255,100)
        noFallToggle.BackgroundColor3 = Color3.fromRGB(60,80,60)
    else
        noFallToggle.Text = "❌ No Fall: OFF"
        noFallToggle.TextColor3 = Color3.fromRGB(255,100,100)
        noFallToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
    end
end

local function toggleAntiRagdoll()
    antiRagdollEnabled = not antiRagdollEnabled
    if antiRagdollEnabled then
        antiRagdollToggle.Text = "✅ Anti Ragdoll: ON"
        antiRagdollToggle.TextColor3 = Color3.fromRGB(100,255,100)
        antiRagdollToggle.BackgroundColor3 = Color3.fromRGB(60,80,60)
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
        end
    else
        antiRagdollToggle.Text = "❌ Anti Ragdoll: OFF"
        antiRagdollToggle.TextColor3 = Color3.fromRGB(255,100,100)
        antiRagdollToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, true)
        end
    end
end

local function toggleInfiniteJump()
    infiniteJumpEnabled = not infiniteJumpEnabled
    if infiniteJumpEnabled then
        infiniteJumpToggle.Text = "✅ Infinite Jump: ON"
        infiniteJumpToggle.TextColor3 = Color3.fromRGB(100,255,100)
        infiniteJumpToggle.BackgroundColor3 = Color3.fromRGB(60,80,60)
    else
        infiniteJumpToggle.Text = "❌ Infinite Jump: OFF"
        infiniteJumpToggle.TextColor3 = Color3.fromRGB(255,100,100)
        infiniteJumpToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
    end
end

local function UpdateAimTeams()
    criminalBtn.Text = (AIM_GROUP == "Prison+Escapee" and "" or "") .. " Prison+Escapee"
    policeBtn.Text = (AIM_GROUP == "Police" and "" or "") .. " Police"
    
    if AIM_GROUP == "Criminals" then
        criminalBtn.BackgroundColor3 = Color3.fromRGB(220,20,60)
        criminalBtn.TextColor3 = Color3.new(1,1,1)
        policeBtn.BackgroundColor3 = Color3.fromRGB(60,60,65)
        policeBtn.TextColor3 = Color3.fromRGB(200,200,200)
    else
        policeBtn.BackgroundColor3 = Color3.fromRGB(220,20,60)
        policeBtn.TextColor3 = Color3.new(1,1,1)
        criminalBtn.BackgroundColor3 = Color3.fromRGB(60,60,65)
        criminalBtn.TextColor3 = Color3.fromRGB(200,200,200)
    end
end

local function UpdateESPButtons()
    espCriminalBtn.Text = (ESP_CRIMINALS and "" or "") .. " Prison+Escapee"
    espPoliceBtn.Text = (ESP_POLICE and "" or "") .. " Police"
    
    if ESP_CRIMINALS then
        espCriminalBtn.BackgroundColor3 = Color3.fromRGB(220,20,60)
        espCriminalBtn.TextColor3 = Color3.new(1,1,1)
    else
        espCriminalBtn.BackgroundColor3 = Color3.fromRGB(60,60,65)
        espCriminalBtn.TextColor3 = Color3.fromRGB(200,200,200)
    end
    
    if ESP_POLICE then
        espPoliceBtn.BackgroundColor3 = Color3.fromRGB(220,20,60)
        espPoliceBtn.TextColor3 = Color3.new(1,1,1)
    else
        espPoliceBtn.BackgroundColor3 = Color3.fromRGB(60,60,65)
        espPoliceBtn.TextColor3 = Color3.fromRGB(200,200,200)
    end
end

local function AddESP(player)
    if player.Character and player.Character:FindFirstChild("Head") and not player.Character.Head:FindFirstChild("ESP") then
        local billboard = Instance.new("BillboardGui", player.Character.Head)
        billboard.Name = "ESP"
        billboard.Size = UDim2.new(0,200,0,50)
        billboard.AlwaysOnTop = true
        billboard.Adornee = player.Character.Head

        local label = Instance.new("TextLabel", billboard)
        label.Size = UDim2.new(1,0,2,0)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.new(1,1,1)
        label.TextStrokeTransparency = 0
        label.Font = Enum.Font.SourceSansBold
        label.TextSize = 16

        RS.RenderStepped:Connect(function()
            local inGroup, teamType = InESPGroup(player)
            if ESP_ENABLED and player and player.Character and player.Character:FindFirstChild("Head") and inGroup then
                local teamName = player.Team and player.Team.Name or "Unknown"
                label.Text = player.Name .. " - " .. teamName
                billboard.StudsOffset = Vector3.new(0, ESP_OFFSET, 0)
                
                if teamType == "Criminal" then
                    label.TextColor3 = Color3.fromRGB(255,100,100)
                elseif teamType == "Police" then
                    label.TextColor3 = Color3.fromRGB(100,100,255)
                else
                    label.TextColor3 = Color3.new(1,1,1)
                end
                
                label.Visible = true
            else
                label.Visible = false
            end
        end)
    end
end

RS.RenderStepped:Connect(function()
    if not AIM_ENABLED then return end
    local closest, dist = nil, AIM_DISTANCE
    for _, p in ipairs(Players:GetPlayers()) do
        local c = p.Character
        if p ~= player and c and c:FindFirstChild("Head") and InGroup(p) then
            local pos, vis = Camera:WorldToViewportPoint(c.Head.Position)
            if vis then
                local d = (Vector2.new(pos.X,pos.Y) - Camera.ViewportSize/2).Magnitude
                if d < dist then
                    dist, closest = d, p
                end
            end
        end
    end
    if closest then
        Camera.CFrame = CFrame.lookAt(Camera.CFrame.Position, closest.Character.Head.Position)
    end
end)

RS.RenderStepped:Connect(function()
    if noFallEnabled and player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid:ChangeState(11)
    end
end)

player.CharacterAdded:Connect(function(char)
    char.ChildAdded:Connect(function(obj)
        if antiRagdollEnabled and obj:IsA("Humanoid") then
            obj:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
        end
    end)
end)

local function updateSpeed(value)
    speedValue = math.floor(1 + (value * 99))
    speedSliderLabel.Text = "Speed Value " .. speedValue
    
    if speedEnabled and player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid.WalkSpeed = speedValue
    end
end

local function toggleSpeed()
    speedEnabled = not speedEnabled
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        if speedEnabled then
            player.Character.Humanoid.WalkSpeed = speedValue
            speedToggle.Text = "✅ Speed Hack: ON (" .. speedValue .. ")"
            speedToggle.TextColor3 = Color3.fromRGB(100,255,100)
            speedToggle.BackgroundColor3 = Color3.fromRGB(60,80,60)
        else
            player.Character.Humanoid.WalkSpeed = originalSpeed
            speedToggle.Text = "❌ Speed Hack: OFF"
            speedToggle.TextColor3 = Color3.fromRGB(255,100,100)
            speedToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
        end
    end
end

local function toggleJump()
    jumpEnabled = not jumpEnabled
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        if jumpEnabled then
            player.Character.Humanoid.JumpPower = 100
            jumpToggle.Text = "✅ Jump Hack: ON"
            jumpToggle.TextColor3 = Color3.fromRGB(100,255,100)
            jumpToggle.BackgroundColor3 = Color3.fromRGB(60,80,60)
        else
            player.Character.Humanoid.JumpPower = originalJump
            jumpToggle.Text = "❌ Jump Hack: OFF"
            jumpToggle.TextColor3 = Color3.fromRGB(255,100,100)
            jumpToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
        end
    end
end

local function toggleFOV()
    fovEnabled = not fovEnabled
    if fovEnabled then
        Camera.FieldOfView = 120
        fovToggle.Text = "✅ FOV Changer: ON"
        fovToggle.TextColor3 = Color3.fromRGB(100,255,100)
        fovToggle.BackgroundColor3 = Color3.fromRGB(60,80,60)
    else
        Camera.FieldOfView = originalFOV
        fovToggle.Text = "❌ FOV Changer: OFF"
        fovToggle.TextColor3 = Color3.fromRGB(255,100,100)
        fovToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
    end
end

local function updateFOV(value)
    local fovValue = math.floor(70 + (value * 80))
    Camera.FieldOfView = fovValue
    fovSliderLabel.Text = "Camera FOV " .. fovValue
end

local function updateOffset(value)
    ESP_OFFSET = 1 + (value * 9)
end

aimToggle.MouseButton1Click:Connect(function()
    AIM_ENABLED = not AIM_ENABLED
    if AIM_ENABLED then
        aimToggle.Text = "✅ Aimbot: ON"
        aimToggle.TextColor3 = Color3.fromRGB(100,255,100)
        aimToggle.BackgroundColor3 = Color3.fromRGB(60,80,60)
        title.Text = "AIM ACTIVE"
    else
        aimToggle.Text = "❌ Aimbot: OFF"
        aimToggle.TextColor3 = Color3.fromRGB(255,100,100)
        aimToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
        title.Text = "ZIYABABA VALLEY PRISON"
    end
end)
espToggle.MouseButton1Click:Connect(function()
    ESP_ENABLED = not ESP_ENABLED
    if ESP_ENABLED then
        espToggle.Text = "✅ ESP: ON"
        espToggle.TextColor3 = Color3.fromRGB(100,255,100)
        espToggle.BackgroundColor3 = Color3.fromRGB(60,80,60)
        title.Text = "ESP ACTIVE"
    else
        espToggle.Text = "❌ ESP: OFF"
        espToggle.TextColor3 = Color3.fromRGB(255,100,100)
        espToggle.BackgroundColor3 = Color3.fromRGB(50,50,55)
        title.Text = "ZIYABABA VALLEY PRISON"
    end
end)

criminalBtn.MouseButton1Click:Connect(function()
    AIM_GROUP = "Criminals"
    UpdateAimTeams()
end)

policeBtn.MouseButton1Click:Connect(function()
    AIM_GROUP = "Police"
    UpdateAimTeams()
end)

espCriminalBtn.MouseButton1Click:Connect(function()
    ESP_CRIMINALS = not ESP_CRIMINALS
    UpdateESPButtons()
end)

espPoliceBtn.MouseButton1Click:Connect(function()
    ESP_POLICE = not ESP_POLICE
    UpdateESPButtons()
end)

speedToggle.MouseButton1Click:Connect(toggleSpeed)
jumpToggle.MouseButton1Click:Connect(toggleJump)
infiniteJumpToggle.MouseButton1Click:Connect(toggleInfiniteJump)
noFallToggle.MouseButton1Click:Connect(toggleNoFall)
antiRagdollToggle.MouseButton1Click:Connect(toggleAntiRagdoll)
fovToggle.MouseButton1Click:Connect(toggleFOV)

local speedDragging = false
speedSlider.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        speedDragging = true
        local function updateSpeedSlider()
            local mouse = UIS:GetMouseLocation()
            local relativeX = (mouse.X - speedSlider.AbsolutePosition.X) / speedSlider.AbsoluteSize.X
            relativeX = math.clamp(relativeX, 0, 1)
            speedFill.Size = UDim2.new(relativeX, 0, 1, 0)
            updateSpeed(relativeX)
            
            if speedEnabled then
                speedToggle.Text = "✅ Speed Hack: ON (" .. speedValue .. ")"
            end
        end
        updateSpeedSlider()
        
        local connection
        connection = UIS.InputChanged:Connect(function(moveInput)
            if speedDragging and moveInput.UserInputType == Enum.UserInputType.MouseMovement then
                updateSpeedSlider()
            end
        end)
        
        local endConnection
        endConnection = UIS.InputEnded:Connect(function(endInput)
            if endInput.UserInputType == Enum.UserInputType.MouseButton1 then
                speedDragging = false
                connection:Disconnect()
                endConnection:Disconnect()
            end
        end)
    end
end)

local fovDragging = false
fovSlider.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        fovDragging = true
        local function updateSlider()
            local mouse = UIS:GetMouseLocation()
            local relativeX = (mouse.X - fovSlider.AbsolutePosition.X) / fovSlider.AbsoluteSize.X
            relativeX = math.clamp(relativeX, 0, 1)
            fovFill.Size = UDim2.new(relativeX, 0, 1, 0)
            updateFOV(relativeX)
        end
        updateSlider()
        
        local connection
        connection = UIS.InputChanged:Connect(function(moveInput)
            if fovDragging and moveInput.UserInputType == Enum.UserInputType.MouseMovement then
                updateSlider()
            end
        end)
        
        local endConnection
        endConnection = UIS.InputEnded:Connect(function(endInput)
            if endInput.UserInputType == Enum.UserInputType.MouseButton1 then
                fovDragging = false
                connection:Disconnect()
                endConnection:Disconnect()
            end
        end)
    end
end)

local offsetDragging = false
offsetSlider.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        offsetDragging = true
        local function updateOffsetSlider()
            local mouse = UIS:GetMouseLocation()
            local relativeX = (mouse.X - offsetSlider.AbsolutePosition.X) / offsetSlider.AbsoluteSize.X
            relativeX = math.clamp(relativeX, 0, 1)
            updateOffset(relativeX)
        end
        updateOffsetSlider()
        
        local connection
        connection = UIS.InputChanged:Connect(function(moveInput)
            if offsetDragging and moveInput.UserInputType == Enum.UserInputType.MouseMovement then
                updateOffsetSlider()
            end
        end)
        
        local endConnection
        endConnection = UIS.InputEnded:Connect(function(endInput)
            if endInput.UserInputType == Enum.UserInputType.MouseButton1 then
                offsetDragging = false
                connection:Disconnect()
                endConnection:Disconnect()
            end
        end)
    end
end)

top.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = main.Position
    end
end)

UIS.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        glow.Position = UDim2.new(main.Position.X.Scale, main.Position.X.Offset - 10, main.Position.Y.Scale, main.Position.Y.Offset - 10)
    end
end)

UIS.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

local function switchTab(tab)
    if animating then return end
    currentTab = tab
    
    aimTab.BackgroundColor3 = Color3.fromRGB(50,50,55)
    playerTab.BackgroundColor3 = Color3.fromRGB(50,50,55)
    espTab.BackgroundColor3 = Color3.fromRGB(50,50,55)
    tpTab.BackgroundColor3 = Color3.fromRGB(50,50,55)
    
    scroll.Visible = false
    aimFrame.Visible = false
    playerFrame.Visible = false
    espFrame.Visible = false
    
    if tab == "aim" then
        aimTab.BackgroundColor3 = Color3.fromRGB(220,20,60)
        aimFrame.Visible = true
    elseif tab == "player" then
        playerTab.BackgroundColor3 = Color3.fromRGB(220,20,60)
        playerFrame.Visible = true
    elseif tab == "esp" then
        espTab.BackgroundColor3 = Color3.fromRGB(220,20,60)
        espFrame.Visible = true
    else
        tpTab.BackgroundColor3 = Color3.fromRGB(220,20,60)
        scroll.Visible = true
    end
end
aimTab.MouseButton1Click:Connect(function() switchTab("aim") end)
playerTab.MouseButton1Click:Connect(function() switchTab("player") end)
espTab.MouseButton1Click:Connect(function() switchTab("esp") end)
tpTab.MouseButton1Click:Connect(function() switchTab("tp") end)
local function showMenu()
    if animating then return end
    animating = true
    
    glow.Visible = true
    main.Visible = true
    
    main.Size = UDim2.new(0,0,0,0)
    main.Position = UDim2.new(0.5,0,0.5,0)
    
    local sizeTween = TS:Create(main, TweenInfo.new(0.4, Enum.EasingStyle.Back), {
        Size = UDim2.new(0,400,0,340),
        Position = UDim2.new(0.5,-200,0.5,-170)
    })
    
    sizeTween:Play()
    sizeTween.Completed:Connect(function()
        animating = false
        isOpen = true
    end)
end

local function hideMenu()
    if animating then return end
    animating = true
    
    local hideTween = TS:Create(main, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
        Size = UDim2.new(0,0,0,0),
        Position = UDim2.new(0.5,0,0.5,0)
    })
    
    hideTween:Play()
    hideTween.Completed:Connect(function()
        main.Visible = false
        glow.Visible = false
        animating = false
        isOpen = false
    end)
end

close.MouseButton1Click:Connect(hideMenu)
min.MouseButton1Click:Connect(hideMenu)

UIS.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.KeyCode == Enum.KeyCode.K then
        if isOpen then hideMenu() else showMenu() end
    end
end)

Players.PlayerAdded:Connect(function(p)
    p.CharacterAdded:Connect(function()
        task.wait(1)
        AddESP(p)
    end)
end)

for _, p in ipairs(Players:GetPlayers()) do
    if p ~= player then
        if p.Character then AddESP(p) end
        p.CharacterAdded:Connect(function()
            task.wait(1)
            AddESP(p)
        end)
    end
end
UIS.JumpRequest:Connect(function()
    if infiniteJumpEnabled then
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:ChangeState("Jumping")
        end
    end
end)

UpdateAimTeams()
UpdateESPButtons()
switchTab("tp")"))()
